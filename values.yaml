# Default values for boundary.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
boundary: 
  replicas: 1

  image:
    repository: hashicorp/boundary-enterprise:latest

  config: |
    disable_mlock = true

    controller {
      name = "kubernetes-controller"
      description = "A controller for a kubernetes demo!"
      database {
        url = "env://BOUNDARY_PG_URL"
      }
      public_cluster_addr = "localhost"

    }

    worker {
      name = "kubernetes-worker"
      description = "A worker for a kubernetes demo"
      address = "localhost"
      controllers = ["localhost"]
      public_addr = "localhost"
    }

    listener "tcp" {
      address = "0.0.0.0"
      purpose = "api"
      tls_disable = true
    }

    listener "tcp" {
      address = "0.0.0.0"
      purpose = "cluster"
      tls_disable = true
    }

    listener "tcp" {
      address = "0.0.0.0"
      purpose = "proxy"
      tls_disable = true
    }

    kms "aead" {
      purpose = "root"
      aead_type = "aes-gcm"
      key = "sP1fnF5Xz85RrXyELHFeZg9Ad2qt4Z4bgNHVGtD6ung="
      key_id = "global_root"
    }

    kms "aead" {
      purpose = "worker-auth"
      aead_type = "aes-gcm"
      key = "8fZBjCUfN0TzjEGLQldGY4+iE9AkOvCfjh7+p0GtRBQ="
      key_id = "global_worker-auth"
    }

    kms "aead" {
      purpose = "recovery"
      aead_type = "aes-gcm"
      key = "8fZBjCUfN0TzjEGLQldGY4+iE9AkOvCfjh7+p0GtRBQ="
      key_id = "global_recovery"
    }

  initContainerArgs: 
    # commands that are run in init container
    # either to initialize the database or migrate the database after initialization
    - "database"
    - "init" # or "migrate" to migrate the database to respect new config.hcl
    - "-config"
    - "/boundary/config.hcl"
   
  livenessProbe:
    httpGet:
      path: "/"
      port: 9200
  
  readinessProbe:
    httpGet:
      path: "/"
      port: 9200


  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  service:
    type: clusterIP
    name: boundary-controller
    ports:
      - name: api
        port: 9200
      - name: cluster
        port: 9201
      - name: data
        port: 9202  

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources:
    # for minikube mac m1
    requests:
      cpu: "100m"  # 0.1 CPU cores
      memory: "256Mi"  # 256 MiB of memory
    limits:
      cpu: "500m"  # 0.5 CPU cores
      memory: "1Gi"  # 1 GiB of memory  

postgres:
  podName: postgres-boundary
  replicas: 1
  env:
  - name: POSTGRES_DB
    value: "boundary"
  - name: POSTGRES_USER
    value: "postgres"
  - name: POSTGRES_PASSWORD
    value: "postgres"
  
  livenessProbe:
    exec:
      command: ["psql", "-w", "-U", "postgres", "-d", "boundary", "-c", "SELECT 1"]



